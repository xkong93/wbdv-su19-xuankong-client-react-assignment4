{"ast":null,"code":"import widgets from '../data/widgets'; // reducer => state => store => provider => container => map to props => components\n\nconst widgetReducer = (state = {\n  widgets: widgets\n}, action) => {\n  if (action.type === 'DELETE_WIDGET') {\n    return {\n      widgets: state.widgets.filter(widget => widget.id != action.widgetId)\n    };\n  } else if (action.type === 'CREATE_WIDGET') {\n    return {\n      widgets: [...state.widgets, {\n        id: new Date().getTime(),\n        name: 'New Widget',\n        type: 'HEADING',\n        size: '1'\n      }]\n    };\n  } else if (action.type === 'UPDATE_WIDGET') {\n    return {\n      widgets: state.widgets.map(widget => widget.id == action.widget.id ? action.widget : widget)\n    };\n  } else if (action.type == \"UPDATE_HEADING\") {\n    return {\n      widgets: state.widgets.map(widget => {\n        if (widget.id === action.widgetId) {\n          widget.size = action.size;\n        }\n\n        return widget;\n      })\n    };\n  }\n\n  return state;\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/src/reducers/widgetReducer.js"],"names":["widgets","widgetReducer","state","action","type","filter","widget","id","widgetId","Date","getTime","name","size","map"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB,C,CAEA;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG;AAACF,EAAAA,OAAO,EAAEA;AAAV,CAAT,EAA6BG,MAA7B,KAAwC;AAC1D,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACjC,WAAO;AACHJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcK,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,EAAP,IAAaJ,MAAM,CAACK,QAAnD;AADN,KAAP;AAGH,GAJD,MAIO,IAAIL,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACxC,WAAO;AACHJ,MAAAA,OAAO,EAAE,CACL,GAAGE,KAAK,CAACF,OADJ,EAEL;AACIO,QAAAA,EAAE,EAAG,IAAIE,IAAJ,EAAD,CAAaC,OAAb,EADR;AAEIC,QAAAA,IAAI,EAAE,YAFV;AAGIP,QAAAA,IAAI,EAAE,SAHV;AAIIQ,QAAAA,IAAI,EAAC;AAJT,OAFK;AADN,KAAP;AAWH,GAZM,MAYA,IAAIT,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACxC,WAAO;AACHJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAca,GAAd,CAAkBP,MAAM,IAAIA,MAAM,CAACC,EAAP,IAAaJ,MAAM,CAACG,MAAP,CAAcC,EAA3B,GAAgCJ,MAAM,CAACG,MAAvC,GAAgDA,MAA5E;AADN,KAAP;AAGH,GAJM,MAIA,IAAIH,MAAM,CAACC,IAAP,IAAe,gBAAnB,EAAoC;AACvC,WAAM;AACFJ,MAAAA,OAAO,EAACE,KAAK,CAACF,OAAN,CAAca,GAAd,CAAkBP,MAAM,IAAI;AAChC,YAAIA,MAAM,CAACC,EAAP,KAAcJ,MAAM,CAACK,QAAzB,EAAkC;AAC9BF,UAAAA,MAAM,CAACM,IAAP,GAAcT,MAAM,CAACS,IAArB;AACH;;AACD,eAAON,MAAP;AACH,OALO;AADN,KAAN;AAQH;;AACD,SAAOJ,KAAP;AACH,CAhCD;;AAkCA,eAAeD,aAAf","sourcesContent":["import widgets from '../data/widgets'\n\n// reducer => state => store => provider => container => map to props => components\n\nconst widgetReducer = (state = {widgets: widgets}, action) => {\n    if (action.type === 'DELETE_WIDGET') {\n        return {\n            widgets: state.widgets.filter(widget => widget.id != action.widgetId)\n        }\n    } else if (action.type === 'CREATE_WIDGET') {\n        return {\n            widgets: [\n                ...state.widgets,\n                {\n                    id: (new Date()).getTime(),\n                    name: 'New Widget',\n                    type: 'HEADING',\n                    size:'1'\n                }\n            ]\n        }\n    } else if (action.type === 'UPDATE_WIDGET') {\n        return {\n            widgets: state.widgets.map(widget => widget.id == action.widget.id ? action.widget : widget)\n        }\n    } else if (action.type == \"UPDATE_HEADING\"){\n        return{\n            widgets:state.widgets.map(widget => {\n                if (widget.id === action.widgetId){\n                    widget.size = action.size\n                }\n                return widget\n            })\n        }\n    }\n    return state;\n}\n\nexport default widgetReducer"]},"metadata":{},"sourceType":"module"}