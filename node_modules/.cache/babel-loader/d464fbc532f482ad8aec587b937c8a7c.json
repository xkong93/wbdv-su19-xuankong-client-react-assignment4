{"ast":null,"code":"import widgets from '../data/widgets';\nexport default class WidgetService {\n  constructor() {\n    this.createWidget = widget => {\n      widgets.push(widget);\n    };\n\n    this.findAllWidgets = () => widgets;\n\n    this.findWidgetById = widgetId => {\n      return widgets.find(widget => widget.id == widgetId);\n    };\n\n    this.updateWidget = (widgetId, newWidget) => {\n      widgets = widgets.map(widget => widget.id == widgetId ? newWidget : widget);\n    };\n\n    this.deleteWidget = widgetId => {\n      widgets = widgets.filter(widget => widget.id != widgetId);\n    };\n  }\n\n  static getInstance() {\n    if (WidgetService.myInstance == null) {\n      WidgetService.myInstance = new WidgetService();\n    }\n\n    return this.myInstance;\n  }\n\n}\nWidgetService.myInstance = null;","map":{"version":3,"sources":["/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/src/services/WidgetService.js"],"names":["widgets","WidgetService","createWidget","widget","push","findAllWidgets","findWidgetById","widgetId","find","id","updateWidget","newWidget","map","deleteWidget","filter","getInstance","myInstance"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,eAAe,MAAMC,aAAN,CAAoB;AAAA;AAAA,SAU/BC,YAV+B,GAUhBC,MAAM,IAAI;AACrBH,MAAAA,OAAO,CAACI,IAAR,CAAaD,MAAb;AACH,KAZ8B;;AAAA,SAc/BE,cAd+B,GAcd,MAAML,OAdQ;;AAAA,SAiB/BM,cAjB+B,GAiBbC,QAAD,IAAc;AAC3B,aAAOP,OAAO,CAACQ,IAAR,CAAcL,MAAM,IAAIA,MAAM,CAACM,EAAP,IAAaF,QAArC,CAAP;AACH,KAnB8B;;AAAA,SAqB/BG,YArB+B,GAqBjB,CAACH,QAAD,EAAWI,SAAX,KAAyB;AACnCX,MAAAA,OAAO,GAAGA,OAAO,CAACY,GAAR,CAAYT,MAAM,IAAIA,MAAM,CAACM,EAAP,IAAaF,QAAb,GAAwBI,SAAxB,GAAoCR,MAA1D,CAAV;AACH,KAvB8B;;AAAA,SAyB/BU,YAzB+B,GAyBfN,QAAD,IAAc;AACzBP,MAAAA,OAAO,GAAGA,OAAO,CAACc,MAAR,CAAeX,MAAM,IAAIA,MAAM,CAACM,EAAP,IAAaF,QAAtC,CAAV;AACH,KA3B8B;AAAA;;AAG/B,SAAOQ,WAAP,GAAqB;AACjB,QAAId,aAAa,CAACe,UAAd,IAA4B,IAAhC,EAAsC;AAClCf,MAAAA,aAAa,CAACe,UAAd,GAA2B,IAAIf,aAAJ,EAA3B;AACH;;AACD,WAAO,KAAKe,UAAZ;AACH;;AAR8B;AAAdf,a,CACVe,U,GAAa,I","sourcesContent":["import widgets from '../data/widgets'\n\nexport default class WidgetService {\n    static myInstance = null;\n\n    static getInstance() {\n        if (WidgetService.myInstance == null) {\n            WidgetService.myInstance = new WidgetService()\n        }\n        return this.myInstance\n    }\n\n    createWidget = widget => {\n        widgets.push(widget)\n    }\n\n    findAllWidgets = () => widgets\n\n\n    findWidgetById = (widgetId) => {\n        return widgets.find( widget => widget.id == widgetId)\n    }\n\n    updateWidget =(widgetId, newWidget) => {\n        widgets = widgets.map(widget => widget.id == widgetId ? newWidget : widget)\n    }\n\n    deleteWidget = (widgetId) => {\n        widgets = widgets.filter(widget => widget.id != widgetId);\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}