{"ast":null,"code":"import WidgetService from '../services/WidgetService'; // reducer => state => store => provider => container => map to props => components\n\nconst widgetReducer = (state = {\n  widgets: [],\n  preview: false\n}, action) => {\n  if (action.type === 'DELETE_WIDGET') {\n    return {\n      widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\n    };\n  } else if (action.type === 'CREATE_WIDGET') {\n    return {\n      widgets: action.widgets\n    };\n  } else if (action.type === 'UPDATE_WIDGET') {\n    return {\n      widgets: action.widgets\n    };\n  } else if (action.type === \"Move_Down\") {\n    return {\n      widgets: newDownWidgets(action.widget, state.widgets)\n    };\n  } else if (action.type === \"Move_Up\") {\n    return {\n      widgets: newUpWidgets(action.widget, state.widgets)\n    };\n  } else if (action.type === \"FIND_WIDGET\") {\n    return {\n      widget: state.widgets.find(widget => widget.id == action.wid)\n    };\n  } else if (action.type === \"FIND_ALL_WIDGET\") {\n    return {\n      widgets: [...state.widgets]\n    };\n  } else if (action.type === \"PREVIEW\") {\n    // console.log(log\"preview\")\n    // let newState = Object.assign({}, state)\n    // newState.preview = !newState.preview\n    // return newState\n    return {\n      widgets: state.widgets,\n      preview: !state.preview\n    };\n  } else if (action.type === \"FIND_ALL_WIDGETS\") {\n    return {\n      widgets: action.widgets\n    };\n  }\n\n  return state;\n};\n\nvar newDownWidgets = (targetWidget, widgets) => {\n  let newArr = [...widgets];\n\n  if (newArr.length < 2) {\n    return newArr;\n  }\n\n  for (var i = 0; i < newArr.length; i++) {\n    if (targetWidget.id === newArr[i].id && i < newArr.length - 1) {\n      var tempWidget = newArr[i + 1];\n      console.log(tempWidget);\n      newArr[i + 1] = newArr[i];\n      newArr[i] = tempWidget;\n      break; //once it is found, it needs to break\n    }\n  }\n\n  return newArr;\n};\n\nvar newUpWidgets = (targetWidget, widgets) => {\n  let newArr = [...widgets];\n\n  if (newArr.length < 2) {\n    return newArr;\n  }\n\n  for (var i = 0; i < newArr.length; i++) {\n    if (targetWidget.id === newArr[i].id && i > 0) {\n      var tempWidget = newArr[i - 1];\n      console.log(tempWidget);\n      newArr[i - 1] = newArr[i];\n      newArr[i] = tempWidget;\n      break; //once it is found, it needs to break\n    }\n  }\n\n  return newArr;\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/src/reducers/widgetReducer.js"],"names":["WidgetService","widgetReducer","state","widgets","preview","action","type","filter","widget","id","widgetId","newDownWidgets","newUpWidgets","find","wid","targetWidget","newArr","length","i","tempWidget","console","log"],"mappings":"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","sourcesContent":["import WidgetService from '../services/WidgetService'\n// reducer => state => store => provider => container => map to props => components\n\nconst widgetReducer = (state = {widgets: [],preview : false}, action) => {\n    if (action.type === 'DELETE_WIDGET') {\n        return {\n            widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\n        }\n    } else if (action.type === 'CREATE_WIDGET') {\n        return {\n            widgets:action.widgets\n        }\n    } else if (action.type === 'UPDATE_WIDGET') {\n        return {\n            widgets: action.widgets\n        }\n\n    }else if(action.type === \"Move_Down\"){\n        return {\n            widgets:newDownWidgets(action.widget,state.widgets)\n        }\n    }else if(action.type === \"Move_Up\"){\n        return {\n            widgets:newUpWidgets(action.widget,state.widgets)\n        }\n    }else if (action.type === \"FIND_WIDGET\"){\n        return {\n            widget:state.widgets.find( widget => widget.id == action.wid)\n        }\n    }else if (action.type === \"FIND_ALL_WIDGET\"){\n        return {\n            widgets:[...state.widgets]\n        }\n    }else if (action.type === \"PREVIEW\"){\n        // console.log(log\"preview\")\n        // let newState = Object.assign({}, state)\n        // newState.preview = !newState.preview\n        // return newState\n        return {\n          widgets: state.widgets,\n          preview: !state.preview\n        }\n    }else if (action.type === \"FIND_ALL_WIDGETS\"){\n        return {\n            widgets:action.widgets\n        }\n    }\n    return state;\n}\n\nvar newDownWidgets = (targetWidget,widgets) => {\n    let newArr = [...widgets]\n    if(newArr.length  < 2){\n        return newArr\n    }\n    for (var i = 0; i < newArr.length; i++){\n        if(targetWidget.id === newArr[i].id && i < newArr.length - 1){\n            var tempWidget = newArr[i + 1]\n            console.log(tempWidget)\n            newArr[i + 1] = newArr[i];\n            newArr[i] = tempWidget;\n            break; //once it is found, it needs to break\n        }\n    }\n    return newArr\n}\n\nvar newUpWidgets = (targetWidget,widgets) => {\n    let newArr = [...widgets]\n    if(newArr.length  < 2){\n        return newArr\n    }\n    for (var i = 0; i < newArr.length; i++){\n        if(targetWidget.id === newArr[i].id && i > 0){\n            var tempWidget = newArr[i - 1]\n            console.log(tempWidget)\n            newArr[i - 1] = newArr[i];\n            newArr[i] = tempWidget;\n            break; //once it is found, it needs to break\n        }\n    }\n    return newArr\n}\n\nexport default widgetReducer"]},"metadata":{},"sourceType":"module"}