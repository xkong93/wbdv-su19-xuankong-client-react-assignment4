{"ast":null,"code":"import _objectSpread from \"/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/src/components/widgets/ListWidget.js\";\nimport React from 'react';\n\nconst ListWidget = ({\n  widget,\n  preview,\n  updateWidget\n}) => {\n  var array = widget.text.split(\"\\n\");\n  var keyIncre = 0;\n  return React.createElement(\"div\", {\n    className: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    hidden: preview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"List Widget\"), React.createElement(\"div\", {\n    hidden: preview,\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"List Text\"), React.createElement(\"textarea\", {\n    id: \"List\",\n    className: \"form-control\",\n    onChange: e => updateWidget(_objectSpread({}, widget, {\n      text: e.target.value\n    })),\n    placeholder: \"one list item per line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    hidden: preview,\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"ListChoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"List Style\"), React.createElement(\"select\", {\n    id: \"ListChoice\",\n    className: \"form-control\",\n    defaultValue: \"true\",\n    onChange: e => updateWidget(_objectSpread({}, widget, {\n      order: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Unordered List\"), React.createElement(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Ordered List\"))), React.createElement(\"div\", {\n    hidden: preview,\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"WidgetListName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Widget Name \"), React.createElement(\"input\", {\n    id: \"WidgetListName\",\n    className: \"form-control\",\n    placeholder: widget.name,\n    onChange: event => updateWidget(_objectSpread({}, widget, {\n      name: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), widget.order == \"false\" && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, array.map(element => React.createElement(\"li\", {\n    key: ++keyIncre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, element))), widget.order == \"true\" && React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, array.map(element => React.createElement(\"li\", {\n    key: ++keyIncre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, element))));\n};\n\nexport default ListWidget;","map":{"version":3,"sources":["/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/src/components/widgets/ListWidget.js"],"names":["React","ListWidget","widget","preview","updateWidget","array","text","split","keyIncre","e","target","value","order","name","event","map","element"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst ListWidget = ({widget, preview, updateWidget}) => {\n\n    var array = widget.text.split(\"\\n\")\n    var keyIncre = 0\n    return (\n        <div className=\"border\">\n            <h1 hidden={preview}>List Widget</h1>\n            <div hidden={preview} className=\"form-group\">\n                <label for=\"List\">List Text</label>\n\n                <textarea id=\"List\" className=\"form-control\"\n                          onChange={(e) => updateWidget({...widget, text: e.target.value})}\n                          placeholder=\"one list item per line\"></textarea>\n            </div>\n\n            <div hidden={preview} className=\"form-group\">\n                <label for=\"ListChoice\">List Style</label>\n\n                <select id=\"ListChoice\" className=\"form-control\" defaultValue=\"true\"\n                        onChange={(e) => updateWidget({...widget, order: e.target.value})}>\n                    <option value={false}>Unordered List</option>\n                    <option value={true}>Ordered List</option>\n                </select>\n            </div>\n\n            <div hidden={preview} className=\"form-group\">\n                <label for=\"WidgetListName\">Widget Name </label>\n\n                <input id=\"WidgetListName\" className=\"form-control\" placeholder={widget.name}\n                       onChange={(event) => updateWidget({...widget, name: event.target.value})}\n                />\n            </div>\n            {\n                widget.order == \"false\" && <ul>\n                    {array.map(element => <li key={++keyIncre}>{element}</li>)}\n                </ul>\n            }\n\n            {\n                widget.order == \"true\" && <ol>\n                    {array.map(element => <li key={++keyIncre}>{element}</li>)}\n                </ol>\n            }\n\n\n        </div>\n\n\n    )\n\n\n}\n\nexport default ListWidget"]},"metadata":{},"sourceType":"module"}