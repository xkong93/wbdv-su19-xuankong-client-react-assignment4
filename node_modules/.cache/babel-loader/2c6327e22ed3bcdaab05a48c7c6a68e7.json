{"ast":null,"code":"import courses from './courses.json';\n\nclass CourseService {\n  constructor() {\n    this.url = 'http://localhost:8080/api/courses';\n\n    this.createCourse = course => {\n      return fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify(course),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(response => response.json());\n    };\n\n    this.findAllCourses = () => {\n      return courses;\n    };\n\n    this.findCourseById = courseId => {\n      return courses.find(course => course.id == courseId);\n    };\n\n    this.updateCourse = (courseId, newCourse) => {\n      courses = courses.map(course => course.id == courseId ? newCourse : course);\n    };\n\n    this.deleteCourse = courseId => {\n      courses = courses.filter(course => course.id !== courseId);\n    };\n  }\n\n  static getInstance() {\n    if (CourseService.myInstance == null) {\n      CourseService.myInstance = new CourseService();\n    }\n\n    return this.myInstance;\n  }\n\n}\n\nCourseService.myInstance = null;\nexport default CourseService;","map":{"version":3,"sources":["/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/src/services/CourseService.js"],"names":["courses","CourseService","url","createCourse","course","fetch","method","body","JSON","stringify","headers","then","response","json","findAllCourses","findCourseById","courseId","find","id","updateCourse","newCourse","map","deleteCourse","filter","getInstance","myInstance"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,aAAN,CAAoB;AAAA;AAAA,SAGhBC,GAHgB,GAGV,mCAHU;;AAAA,SAahBC,YAbgB,GAaDC,MAAM,IAAI;AACrB,aAAOC,KAAK,CAAC,KAAKH,GAAN,EAAW;AACnBI,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAFa;AAGnBM,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHU,OAAX,CAAL,CAMJC,IANI,CAMCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANb,CAAP;AAOH,KArBe;;AAAA,SAsBhBC,cAtBgB,GAsBC,MAAM;AACnB,aAAOd,OAAP;AACH,KAxBe;;AAAA,SAyBhBe,cAzBgB,GAyBCC,QAAQ,IAAI;AACzB,aAAOhB,OAAO,CAACiB,IAAR,CAAab,MAAM,IAAIA,MAAM,CAACc,EAAP,IAAaF,QAApC,CAAP;AACH,KA3Be;;AAAA,SA4BhBG,YA5BgB,GA4BD,CAACH,QAAD,EAAWI,SAAX,KAAyB;AACpCpB,MAAAA,OAAO,GAAGA,OAAO,CAACqB,GAAR,CAAYjB,MAAM,IAAIA,MAAM,CAACc,EAAP,IAAaF,QAAb,GAAwBI,SAAxB,GAAoChB,MAA1D,CAAV;AACH,KA9Be;;AAAA,SA+BhBkB,YA/BgB,GA+BDN,QAAQ,IAAI;AACvBhB,MAAAA,OAAO,GAAGA,OAAO,CAACuB,MAAR,CAAenB,MAAM,IAAIA,MAAM,CAACc,EAAP,KAAcF,QAAvC,CAAV;AACH,KAjCe;AAAA;;AAKhB,SAAOQ,WAAP,GAAqB;AACjB,QAAIvB,aAAa,CAACwB,UAAd,IAA4B,IAAhC,EAAsC;AAClCxB,MAAAA,aAAa,CAACwB,UAAd,GACI,IAAIxB,aAAJ,EADJ;AAEH;;AACD,WAAO,KAAKwB,UAAZ;AACH;;AAXe;;AAAdxB,a,CAEKwB,U,GAAa,I;AAkCxB,eAAexB,aAAf","sourcesContent":["import courses from './courses.json'\n\nclass CourseService {\n\n    static myInstance = null;\n    url = 'http://localhost:8080/api/courses';\n\n    static getInstance() {\n        if (CourseService.myInstance == null) {\n            CourseService.myInstance =\n                new CourseService();\n        }\n        return this.myInstance;\n    }\n\n    createCourse = course => {\n        return fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify(course),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n    findAllCourses = () => {\n        return courses\n    }\n    findCourseById = courseId => {\n        return courses.find(course => course.id == courseId)\n    }\n    updateCourse = (courseId, newCourse) => {\n        courses = courses.map(course => course.id == courseId ? newCourse : course)\n    }\n    deleteCourse = courseId => {\n        courses = courses.filter(course => course.id !== courseId)\n    }\n}\n\nexport default CourseService"]},"metadata":{},"sourceType":"module"}