{"ast":null,"code":"import WidgetListComponent from \"../components/WidgetListComponent\";\nimport { connect } from \"react-redux\";\nimport WidgetService from \"../services/WidgetService\";\nconst service = WidgetService.getInstance();\n\nconst stateToPropMapper = state => {\n  return {\n    widgets: state.widgets,\n    preview: state.preview\n  };\n};\n\nconst propsToDispatcher = dispatch => ({\n  loadWidgets: () => {\n    service.findAllWidgets().then(widgets => dispatch({\n      type: \"FIND_ALL_WIDGETS\",\n      widgets: widgets\n    }));\n  },\n  updateWidget: widget => {\n    service.updateWidget(widget.id, widget).then(service.findAllWidgets()).then(widgets => dispatch({\n      type: \"UPDATE_WIDGET\",\n      widgets: widgets\n    }));\n  },\n  deleteWidget: wid => {\n    dispatch({\n      type: \"DELETE_WIDGET\",\n      widgetId: wid\n    });\n  },\n  createWidget: () => {\n    dispatch({\n      type: \"CREATE_WIDGET\"\n    });\n  },\n  moveWidgetUp: widget => {\n    dispatch({\n      type: \"Move_Up\",\n      widget: widget\n    });\n  },\n  moveWidgetDown: widget => {\n    dispatch({\n      type: \"Move_Down\",\n      widget: widget\n    });\n  },\n  findWidget: wid => {\n    dispatch({\n      type: \"FIND_WIDGET\",\n      widgetId: wid\n    });\n  },\n  findAllWidgets: () => {\n    dispatch({\n      type: \"FIND_ALL_WIDGET\"\n    });\n  },\n  previewMode: () => {\n    dispatch({\n      type: \"PREVIEW\"\n    });\n  }\n});\n\nconst WidgetListContainer = connect(stateToPropMapper, propsToDispatcher)(WidgetListComponent);\nexport default WidgetListContainer;","map":{"version":3,"sources":["/Users/xuankong/Documents/Onedrive/NEU/CS5610/wbdv-su19-xuankong-client-react-assignment4/src/containers/WidgetListContainer.js"],"names":["WidgetListComponent","connect","WidgetService","service","getInstance","stateToPropMapper","state","widgets","preview","propsToDispatcher","dispatch","loadWidgets","findAllWidgets","then","type","updateWidget","widget","id","deleteWidget","wid","widgetId","createWidget","moveWidgetUp","moveWidgetDown","findWidget","previewMode","WidgetListContainer"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,mCAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,OAAO,GAAGD,aAAa,CAACE,WAAd,EAAhB;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADZ;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFZ,GAAP;AAIH,CALD;;AAOA,MAAMC,iBAAiB,GAAGC,QAAQ,KAC9B;AACIC,EAAAA,WAAW,EAAE,MAAM;AACfR,IAAAA,OAAO,CACFS,cADL,GAEKC,IAFL,CAEUN,OAAO,IAAIG,QAAQ,CAAC;AACtBI,MAAAA,IAAI,EAAE,kBADgB;AAEtBP,MAAAA,OAAO,EAAEA;AAFa,KAAD,CAF7B;AAMH,GARL;AASIQ,EAAAA,YAAY,EAAGC,MAAD,IAAY;AAEtBb,IAAAA,OAAO,CACFY,YADL,CACkBC,MAAM,CAACC,EADzB,EAC4BD,MAD5B,EAEKH,IAFL,CAEUV,OAAO,CAACS,cAAR,EAFV,EAEoCC,IAFpC,CAEyCN,OAAO,IAAIG,QAAQ,CAAC;AACrDI,MAAAA,IAAI,EAAE,eAD+C;AAErDP,MAAAA,OAAO,EAAEA;AAF4C,KAAD,CAF5D;AAQH,GAnBL;AAoBIW,EAAAA,YAAY,EAAGC,GAAD,IAAS;AACnBT,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE,eAAP;AAAwBM,MAAAA,QAAQ,EAAED;AAAlC,KAAD,CAAR;AACH,GAtBL;AAuBIE,EAAAA,YAAY,EAAE,MAAM;AAChBX,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GA3BL;AA4BIQ,EAAAA,YAAY,EAAGN,MAAD,IAAY;AACtBN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,SADD;AAELE,MAAAA,MAAM,EAAEA;AAFH,KAAD,CAAR;AAIH,GAjCL;AAkCIO,EAAAA,cAAc,EAAGP,MAAD,IAAY;AACxBN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,WADD;AAELE,MAAAA,MAAM,EAAEA;AAFH,KAAD,CAAR;AAIH,GAvCL;AAwCIQ,EAAAA,UAAU,EAAGL,GAAD,IAAS;AACjBT,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,aADD;AAELM,MAAAA,QAAQ,EAAED;AAFL,KAAD,CAAR;AAIH,GA7CL;AA8CIP,EAAAA,cAAc,EAAE,MAAM;AAClBF,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GAlDL;AAmDIW,EAAAA,WAAW,EAAE,MAAM;AACff,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH;AAvDL,CAD8B,CAAlC;;AA4DA,MAAMY,mBAAmB,GAAGzB,OAAO,CAC/BI,iBAD+B,EAE/BI,iBAF+B,CAAP,CAG1BT,mBAH0B,CAA5B;AAKA,eAAe0B,mBAAf","sourcesContent":["import WidgetListComponent from \"../components/WidgetListComponent\";\nimport {connect} from \"react-redux\";\nimport WidgetService from \"../services/WidgetService\"\n\nconst service = WidgetService.getInstance();\n\nconst stateToPropMapper = state => {\n    return {\n        widgets: state.widgets,\n        preview: state.preview\n    };\n};\n\nconst propsToDispatcher = dispatch => (\n    {\n        loadWidgets: () => {\n            service\n                .findAllWidgets()\n                .then(widgets => dispatch({\n                    type: \"FIND_ALL_WIDGETS\",\n                    widgets: widgets\n                }));\n        },\n        updateWidget: (widget) => {\n\n            service\n                .updateWidget(widget.id,widget)\n                .then(service.findAllWidgets()).then(widgets => dispatch({\n                    type: \"UPDATE_WIDGET\",\n                    widgets: widgets\n                }))\n\n\n        },\n        deleteWidget: (wid) => {\n            dispatch({type: \"DELETE_WIDGET\", widgetId: wid});\n        },\n        createWidget: () => {\n            dispatch({\n                type: \"CREATE_WIDGET\"\n            });\n        },\n        moveWidgetUp: (widget) => {\n            dispatch({\n                type: \"Move_Up\",\n                widget: widget\n            })\n        },\n        moveWidgetDown: (widget) => {\n            dispatch({\n                type: \"Move_Down\",\n                widget: widget\n            })\n        },\n        findWidget: (wid) => {\n            dispatch({\n                type: \"FIND_WIDGET\",\n                widgetId: wid\n            })\n        },\n        findAllWidgets: () => {\n            dispatch({\n                type: \"FIND_ALL_WIDGET\",\n            })\n        },\n        previewMode: () => {\n            dispatch({\n                type: \"PREVIEW\",\n            })\n        }\n\n    });\n\nconst WidgetListContainer = connect(\n    stateToPropMapper,\n    propsToDispatcher\n)(WidgetListComponent);\n\nexport default WidgetListContainer;\n"]},"metadata":{},"sourceType":"module"}